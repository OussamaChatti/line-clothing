{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,IAApB,EAAyBC,GAAzB,EAA6BC,GAA7B,QAAwC,oBAAxC;AAEA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,SAASC,uBAAT,EAAiCC,uBAAjC,QAAgE,gBAAhE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAiCO,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CAACQ,eAAe,CAACU,uBAAjB,EAAyCT,qBAAzC,CAAhB;AACH;AAAA","sourcesContent":["import { takeLatest,call,put,all } from \"redux-saga/effects\";\n\nimport { firestore,convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess,fetchCollectionsFailure } from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch(error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n};\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync)\n};"]},"metadata":{},"sourceType":"module"}