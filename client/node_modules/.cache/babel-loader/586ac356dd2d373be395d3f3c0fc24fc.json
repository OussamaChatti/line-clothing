{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n;","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAwC,oBAAxC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAcC,cAAd,EAA6BC,yBAA7B,QAA8D,+BAA9D;AACA,SAASC,aAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACe,mBAAmB,CAAC;AAC1BC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADS;AAE1B,SAAGH,YAAY,CAACI,IAAb;AAFuB,KAAD,CAApB,CAAT;AAIH,GARD,CAQE,OAAMC,KAAN,EAAa;AACX,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,KAAK,CAACE,OAAP,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AACA,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAAC0B,kBAAkB,CAAC;AACzBV,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADQ;AAEzB,SAAGH,YAAY,CAACI,IAAb;AAFsB,KAAD,CAAnB,CAAT;AAIH,GARD,CAQE,OAAMC,KAAN,EAAa;AACX,UAAMlB,GAAG,CAAC2B,kBAAkB,CAACT,KAAK,CAACE,OAAP,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACnC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,oBAAjB,EAAsCpB,gBAAtC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUqB,kBAAV,GAA+B;AAClC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAqCV,eAArC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAM/B,GAAG,CAAC,CACNC,IAAI,CAAC0B,mBAAD,CADE,EAEN1B,IAAI,CAAC4B,kBAAD,CAFE,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import { takeLatest,put,all,call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { auth,googleProvider,createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInSuccess,signInFailure } from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch(error) {\n        yield put(googleSignInFailure(error.message));\n    }\n};\n\nexport function* signInWithEmail({payload: {email,password}}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data()\n        }));\n    } catch(error) {\n        yield put(emailSignInFailure(error.message));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n};\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ]);\n};"]},"metadata":{},"sourceType":"module"}