{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nconst config = {\n  apiKey: \"AIzaSyC1OpHMRtlUMHKm0R30ZftrdoND_d4U4bw\",\n  authDomain: \"line-db-c1ea6.firebaseapp.com\",\n  projectId: \"line-db-c1ea6\",\n  storageBucket: \"line-db-c1ea6.appspot.com\",\n  messagingSenderId: \"510836283676\",\n  appId: \"1:510836283676:web:db8f5f3fd1e075cce442d9\",\n  measurementId: \"G-XT5ZP8BEFF\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      item\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collections.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","item","data","routeName","encodeURI","toLowerCase","id","items","reduce","accumulator","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst config={\n\n  apiKey: \"AIzaSyC1OpHMRtlUMHKm0R30ZftrdoND_d4U4bw\",\n\n  authDomain: \"line-db-c1ea6.firebaseapp.com\",\n\n  projectId: \"line-db-c1ea6\",\n\n  storageBucket: \"line-db-c1ea6.appspot.com\",\n\n  messagingSenderId: \"510836283676\",\n\n  appId: \"1:510836283676:web:db8f5f3fd1e075cce442d9\",\n\n  measurementId: \"G-XT5ZP8BEFF\"\n\n};\n export const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const addCollectionsAndDocuments = async (collectionKey,objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef,obj);\n  });\n  return await batch.commit();\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {title,item} = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id : doc.id,\n      title,\n      items\n    }\n  });\n  return transformedCollection.reduce((accumulator,collection) => {\n    accumulator[collections.title.toLowerCase()] = collection;\n    return accumulator;\n  },{});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({promt:'select_account'});\n\nexport const signInWithGoogle = () =>{ auth.signInWithPopup(provider);}\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}