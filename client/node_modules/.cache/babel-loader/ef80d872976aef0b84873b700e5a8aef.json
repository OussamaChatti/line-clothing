{"ast":null,"code":"var _jsxFileName = \"/home/blue/Desktop/Projects/line-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router';\nimport CartItem from '../cart-item/cart-item';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { CartDropdownContainer, CartItemsContainer, EmptyMessage, CustomButtonStyled } from './cart-dropdown.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(CartDropdownContainer, {\n  children: [/*#__PURE__*/_jsxDEV(CartItemsContainer, {\n    children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 44\n    }, this)) : /*#__PURE__*/_jsxDEV(EmptyMessage, {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(CustomButtonStyled, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this);\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CartItem","selectCartItems","toggleCartHidden","CartDropdownContainer","CartItemsContainer","EmptyMessage","CustomButtonStyled","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AAEA,SAASC,qBAAT,EAA+BC,kBAA/B,EAAkDC,YAAlD,EAA+DC,kBAA/D,QAAyF,wBAAzF;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA,OAAX;AAAmBC,EAAAA;AAAnB,CAAD,kBACjB,QAAC,qBAAD;AAAA,0BACI,QAAC,kBAAD;AAAA,cAEQF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAAI,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YAA1B,CADD,gBAEC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJT;AAAA;AAAA;AAAA;AAAA,UADJ,eAQI,QAAC,kBAAD;AAAoB,IAAA,OAAO,EAAE,MAAM;AAACL,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AAA0BL,MAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAA6B,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMK,Y;AAaN,MAAMS,eAAe,GAAElB,wBAAwB,CAAC;AAC5CU,EAAAA,SAAS,EAAGP;AADgC,CAAD,CAA/C;AAIA,eAAeF,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router';\n\nimport CartItem from '../cart-item/cart-item';\n\nimport {selectCartItems} from '../../redux/cart/cart.selectors';\nimport {toggleCartHidden} from '../../redux/cart/cart.actions';\n\nimport { CartDropdownContainer,CartItemsContainer,EmptyMessage,CustomButtonStyled } from './cart-dropdown.styles';\n\nconst CartDropdown = ({cartItems,history,dispatch}) => (\n    <CartDropdownContainer>\n        <CartItemsContainer>\n            {\n                cartItems.length?\n                (cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem}/>)):\n                (<EmptyMessage>Your cart is empty</EmptyMessage>)\n            }\n        </CartItemsContainer>\n        <CustomButtonStyled onClick={() => {history.push('/checkout');dispatch(toggleCartHidden())}}>GO TO CHECKOUT</CustomButtonStyled>\n    </CartDropdownContainer>\n);\n\nconst mapStateToProps =createStructuredSelector({\n    cartItems : selectCartItems\n})\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}