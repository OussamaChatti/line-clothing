{"ast":null,"code":"var _jsxFileName = \"/home/blue/Desktop/Projects/line-clothing/src/components/sign-in/sign-in.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.jsx';\nimport FormInput from '../form-input/form-input.jsx';\nimport { auth } from '../../firebase/firebase.utils.js';\nimport { googleSignInStart } from '../../redux/user/user.actions.js';\nimport { SignInContainer, TitleContainer, ButtonsContainer } from './sign-in.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handlechange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          handlechange: this.handlechange,\n          name: \"email\",\n          type: \"email\",\n          required: true,\n          value: this.state.email,\n          label: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          handlechange: this.handlechange,\n          name: \"password\",\n          type: \"password\",\n          required: true,\n          value: this.state.password,\n          label: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","connect","CustomButton","FormInput","auth","googleSignInStart","SignInContainer","TitleContainer","ButtonsContainer","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","err","console","log","handlechange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":[" import React from 'react';\n import { connect } from 'react-redux';\n\n import CustomButton from '../custom-button/custom-button.jsx';\n import FormInput from '../form-input/form-input.jsx';\n \n import {auth} from '../../firebase/firebase.utils.js';\n import { googleSignInStart } from '../../redux/user/user.actions.js';\n\n import {SignInContainer,TitleContainer,ButtonsContainer} from './sign-in.styles';\n\n class SignIn extends React.Component {\n     constructor(props){\n         super(props);\n         this.state = {\n            email : '',\n            password : ''\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const {email,password} = this.state;\n\n        try{\n            await auth.signInWithEmailAndPassword(email,password);\n            this.setState({email:'',password:''});\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n      handlechange = e => {\n        const {value,name} = e.target;\n\n        this.setState({[name]:value});\n    }\n\n    render(){\n        const {googleSignInStart} = this.props;\n        return (\n            <SignInContainer>\n                <TitleContainer>Already have an account?</TitleContainer>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                    handlechange={this.handlechange}\n                    name='email'\n                    type='email'\n                    required\n                    value={this.state.email}\n                    label='Email '\n                    />\n                    <FormInput\n                    handlechange={this.handlechange}\n                    name='password'\n                    type='password'\n                    required\n                    value={this.state.password}\n                    label='Password '\n                    />\n                    <ButtonsContainer>\n                        <CustomButton type='submit'>Sign in</CustomButton>\n                        <CustomButton onClick={googleSignInStart} isGoogleSignIn>\n                        Sign in with Google\n                        </CustomButton>\n                    </ButtonsContainer>\n                </form>\n            </SignInContainer>\n        );\n    }\n }\n\nconst mapDispatchToProps = (dispatch) => ({\n    googleSignInStart : () => dispatch(googleSignInStart())\n});\n\nexport default connect(null,mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}