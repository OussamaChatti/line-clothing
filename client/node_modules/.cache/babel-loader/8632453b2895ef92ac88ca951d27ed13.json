{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailue, signUpSuccess, signUpFailue } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    console.log('done');\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailue(error.message));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n  } catch (error) {\n    yield put(signUpFailue(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}\n;","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailue","signUpSuccess","signUpFailue","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","console","log","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest,put,all,call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { auth,googleProvider,createUserProfileDocument,getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess,signInFailure,signOutSuccess,signOutFailue,signUpSuccess,signUpFailue } from \"./user.actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n    const userRef = yield call(createUserProfileDocument,userAuth);\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n    }));\n} catch(error) {\n    yield put(signInFailure(error.message));\n}\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error.message));\n    }\n};\n\nexport function* signInWithEmail({payload: {email,password}}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error.message));\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try{\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch(error) {\n        yield put(signInFailure(error.message));\n    }\n};\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        console.log('done');\n        yield put(signOutSuccess());\n    } catch(error){\n        yield put(signOutFailue(error.message));\n    }\n};\n\nexport function* signUp({payload:{email,password,displayName}}) {\n    try{\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password);\n    } catch(error) {\n        yield put(signUpFailue(error));\n    }\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut);\n};\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(isUserAuthenticated),\n        call(onSignOutStart)\n    ]);\n};"]},"metadata":{},"sourceType":"module"}