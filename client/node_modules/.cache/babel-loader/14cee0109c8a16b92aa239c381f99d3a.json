{"ast":null,"code":"var _jsxFileName = \"/home/blue/Desktop/Projects/line-clothing/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview';\nimport CollectionPage from '../collection/collection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = diapatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/pages/shop/shop.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","props","path","mapDispatchToProps","diapatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,SAAQC,iBAAR,QAAgC,+BAAhC;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACD,KAFD;AAGD;;AAEDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEjB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEhB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApBoC;;AAuBvC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,iBAAiB,EAAGS,cAAc,IAAIO,QAAQ,CAAChB,iBAAiB,CAACS,cAAD,CAAlB;AADR,CAAL,CAAnC;;AAIA,eAAed,OAAO,CAAC,IAAD,EAAMmB,kBAAN,CAAP,CAAiCb,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport CollectionsOverview from '../../components/collection-overview/collection-overview';\nimport CollectionPage from '../collection/collection';\n\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {updateCollections} from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount(){\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    })\n  }\n\n  render()  {\n    const {match} = this.props;\n\n    return(\n      <div className='shop-page'>\n         <Route exact path={`${match.path}`} component={CollectionsOverview} />\n         <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = diapatch => ({\n  updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}