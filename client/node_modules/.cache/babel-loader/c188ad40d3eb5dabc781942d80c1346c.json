{"ast":null,"code":"var _jsxFileName = \"/home/blue/Desktop/Projects/line-clothing/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/spinner/spinner';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectCollectionsIsFetching, selectCollectionsIsLoaded } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionsFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectCollectionsIsFetching,\n  isCollectionsLoaded: selectCollectionsIsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/pages/shop/shop.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectCollectionsIsFetching","selectCollectionsIsLoaded","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAASC,2BAAT,EAAqCC,yBAArC,QAAsE,iCAAtE;;AAEA,MAAMC,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;KAAMK,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACN,MAAAA;AAAD,QAA+B,KAAKO,KAA1C;AACAP,IAAAA,0BAA0B;AAC3B;;AAEDQ,EAAAA,MAAM,GAAI;AACR,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA,qBAAP;AAA6BC,MAAAA;AAA7B,QAAoD,KAAKJ,KAA/D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEG,qBAA3C;AAAA,aAAsEH;AAAtE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAE,CAACI,mBAAvC;AAAA,aAAgEJ;AAAhE;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhBoC;;AAmBvC,MAAMM,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Cc,EAAAA,qBAAqB,EAAET,2BADwB;AAE/CU,EAAAA,mBAAmB,EAAGT;AAFyB,CAAD,CAAhD;;AAKA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeL,OAAO,CAACkB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/spinner/spinner';\n\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\nimport { selectCollectionsIsFetching,selectCollectionsIsLoaded } from '../../redux/shop/shop.selectors';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  componentDidMount(){\n    const {fetchCollectionsStartAsync} = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render()  {\n    const {match,isCollectionsFetching,isCollectionsLoaded} = this.props;\n\n    return(\n      <div className='shop-page'>\n         <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionsFetching} {...props} />} />\n         <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsFetching: selectCollectionsIsFetching,\n  isCollectionsLoaded : selectCollectionsIsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}