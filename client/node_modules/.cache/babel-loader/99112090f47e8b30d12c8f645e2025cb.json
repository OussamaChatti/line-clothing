{"ast":null,"code":"var _jsxFileName = \"/home/blue/Desktop/Projects/line-clothing/src/components/sign-up/sign-up.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.jsx';\nimport FormInput from '../form-input/form-input.jsx';\nimport { signUpStart } from '../../redux/user/user.actions.js';\nimport { SignUpContainer, TitleContainer, ButtonContainer } from './sign-up.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match!\");\n        return;\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(SignUpContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/blue/Desktop/Projects/line-clothing/src/components/sign-up/sign-up.jsx"],"names":["React","connect","CustomButton","FormInput","signUpStart","SignUpContainer","TitleContainer","ButtonContainer","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CustomButton from '../custom-button/custom-button.jsx';\nimport FormInput from '../form-input/form-input.jsx';\n\nimport { signUpStart } from '../../redux/user/user.actions.js';\n\nimport {SignUpContainer,TitleContainer,ButtonContainer} from './sign-up.styles';\n\nclass SignUp extends React.Component {\n     constructor(props){\n         super(props);\n         this.state = {\n            displayName : '',\n            email : '',\n            password : '',\n            confirmPassword : ''\n        }\n    }\n    handleSubmit = async event =>\n    {\n        event.preventDefault();\n        const {signUpStart} = this.props;\n        const {displayName,email,password,confirmPassword} = this.state;\n        if (password!== confirmPassword) {\n            alert(\"Passwords don't match!\");\n            return;\n        }\n        \n    };\n\n    handleChange = event =>\n    {\n        const {name,value} = event.target;\n        this.setState({[name]:value});\n    };\n\n    render(){\n        const {displayName,email,password,confirmPassword} = this.state;\n        return (\n            <SignUpContainer>\n                <TitleContainer>Don't have an account?</TitleContainer>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={this.handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={this.handleChange}\n                    label='Email'\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    label='Password'\n                    required\n                    />\n                    <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={this.handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                    <ButtonContainer>\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                    </ButtonContainer>\n                </form>\n            </SignUpContainer>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}